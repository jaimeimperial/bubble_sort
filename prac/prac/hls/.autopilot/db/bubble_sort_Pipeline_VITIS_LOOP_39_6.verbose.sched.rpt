

================================================================
== Vitis HLS Report for 'bubble_sort_Pipeline_VITIS_LOOP_39_6'
================================================================
* Date:           Mon Feb 24 14:43:59 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        prac
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z010-clg225-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.462 ns|     1.00 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+-----------------------------------------------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval |                    Pipeline                   |
    |   min   |   max   |    min    |    max   | min | max |                      Type                     |
    +---------+---------+-----------+----------+-----+-----+-----------------------------------------------+
    |        3|       77|  30.000 ns|  0.770 us|    2|   76|  loop auto-rewind stp(delay=0 clock cycles(s))|
    +---------+---------+-----------+----------+-----+-----+-----------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_39_6  |        1|       75|         2|          2|          1|  0 ~ 37|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 2, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.95>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%k = alloca i32 1" [bubble_sort.cpp:39]   --->   Operation 5 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %M, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%A_1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %A_1"   --->   Operation 7 'read' 'A_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%j_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %j"   --->   Operation 8 'read' 'j_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i_2_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %i_2"   --->   Operation 9 'read' 'i_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.58ns)   --->   "%store_ln39 = store i5 %i_2_read, i5 %k" [bubble_sort.cpp:39]   --->   Operation 10 'store' 'store_ln39' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body89"   --->   Operation 11 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%k_1 = load i5 %k" [bubble_sort.cpp:39]   --->   Operation 12 'load' 'k_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.78ns)   --->   "%icmp_ln39 = icmp_ult  i5 %k_1, i5 %j_read" [bubble_sort.cpp:39]   --->   Operation 13 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 1.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%br_ln39 = br i1 %icmp_ln39, void %for.cond69.exitStub, void %for.body89.split" [bubble_sort.cpp:39]   --->   Operation 14 'br' 'br_ln39' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i5 %k_1" [bubble_sort.cpp:39]   --->   Operation 15 'zext' 'zext_ln39' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%M_addr = getelementptr i32 %M, i64 0, i64 %zext_ln39" [bubble_sort.cpp:40]   --->   Operation 16 'getelementptr' 'M_addr' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_1 : Operation 17 [2/2] (2.32ns)   --->   "%M_load = load i5 %M_addr" [bubble_sort.cpp:40]   --->   Operation 17 'load' 'M_load' <Predicate = (icmp_ln39)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>

State 2 <SV = 1> <Delay = 6.46>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%specpipeline_ln39 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [bubble_sort.cpp:39]   --->   Operation 18 'specpipeline' 'specpipeline_ln39' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%speclooptripcount_ln39 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 37, i64 18" [bubble_sort.cpp:39]   --->   Operation 19 'speclooptripcount' 'speclooptripcount_ln39' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%specloopname_ln39 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [bubble_sort.cpp:39]   --->   Operation 20 'specloopname' 'specloopname_ln39' <Predicate = (icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 21 [1/2] (2.32ns)   --->   "%M_load = load i5 %M_addr" [bubble_sort.cpp:40]   --->   Operation 21 'load' 'M_load' <Predicate = (icmp_ln39)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 20> <RAM>
ST_2 : Operation 22 [1/1] (2.55ns)   --->   "%icmp_ln40 = icmp_ugt  i32 %A_1_read, i32 %M_load" [bubble_sort.cpp:40]   --->   Operation 22 'icmp' 'icmp_ln40' <Predicate = (icmp_ln39)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.78ns)   --->   "%add_ln39 = add i5 %k_1, i5 1" [bubble_sort.cpp:39]   --->   Operation 23 'add' 'add_ln39' <Predicate = (icmp_ln39)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.58ns)   --->   "%br_ln40 = br i1 %icmp_ln40, void %for.cond86, void %for.cond69.exitStub" [bubble_sort.cpp:40]   --->   Operation 24 'br' 'br_ln40' <Predicate = (icmp_ln39)> <Delay = 1.58>
ST_2 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln39 = store i5 %add_ln39, i5 %k" [bubble_sort.cpp:39]   --->   Operation 25 'store' 'store_ln39' <Predicate = (icmp_ln39 & !icmp_ln40)> <Delay = 1.58>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln39 = br void %for.body89" [bubble_sort.cpp:39]   --->   Operation 26 'br' 'br_ln39' <Predicate = (icmp_ln39 & !icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node ret_ln0)   --->   "%merge = phi i1 1, void %for.body89, i1 0, void %for.body89.split"   --->   Operation 27 'phi' 'merge' <Predicate = (icmp_ln40) | (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.58ns) (out node of the LUT)   --->   "%ret_ln0 = ret i1 %merge"   --->   Operation 28 'ret' 'ret_ln0' <Predicate = (icmp_ln40) | (!icmp_ln39)> <Delay = 1.58>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 1.000ns.

 <State 1>: 4.956ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln39', bubble_sort.cpp:39) of variable 'i_2_read' on local variable 'k', bubble_sort.cpp:39 [10]  (1.588 ns)
	'load' operation 5 bit ('k', bubble_sort.cpp:39) on local variable 'k', bubble_sort.cpp:39 [13]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln39', bubble_sort.cpp:39) [14]  (1.780 ns)
	multiplexor before 'phi' operation 1 bit ('merge') [30]  (1.588 ns)

 <State 2>: 6.462ns
The critical path consists of the following:
	'load' operation 32 bit ('M_load', bubble_sort.cpp:40) on array 'M' [22]  (2.322 ns)
	'icmp' operation 1 bit ('icmp_ln40', bubble_sort.cpp:40) [23]  (2.552 ns)
	'store' operation 0 bit ('store_ln39', bubble_sort.cpp:39) of variable 'add_ln39', bubble_sort.cpp:39 on local variable 'k', bubble_sort.cpp:39 [27]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
